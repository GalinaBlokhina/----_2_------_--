let value1 = 10;
let max = 50;
let value2 = Math.floor(Math.random() * max);
let result = value1 + value2 / 5 + 17;
console.log(result)

/* 
При вычислении выражений JavaScript учитывает
приоритет операций: операции, имеющие больший приоритет,
выполняются первыми. Если операции имеют равный приоритет,
то они выполняются слева направо. Для изменения порядка 
выполнения операций следует пользоваться круглыми 
скобками: выражение, заключенное в них, имеет наивысший 
приоритет. В следующей таблице приведен список всех
операций языка JavaScript в порядке убывания их 
приоритетов; операции, расположенные в одной строке 
таблицы, имеют равный приоритет.
Группировка () – не определено;
Доступ к свойствам ., [], вызов функции (), ?. – 
слева направо, создание экземпляра объекта со списком 
аргументов new – не определено;
создание экземпляра объекта без аргументов new – 
справа налево;
Постфиксный инкремент ++ и декремент -- – не определено;
Логическое ! и побитовое отрицание ~, унарный плюс + и 
минус -, префиксный инкремент ++ и декремент --, typeof,
void, delete, await – справа налево;
Возведение в степень ** – справа налево;
*, /, % – слева направо;
Сложение +, вычитание - – слева направо;
<<, >> и >>> – слева направо;
<, <=, > и >=, in и instanceof – слева направо;
==, !=, === и !== – слева направо;
& – слева направо;
^ – слева направо;
| – слева направо;
&& – слева направо;
|| и ?? – слева направо;
Условный тернарный оператор ?: – справа налево;
=, +=, -=, **=, *=, /=, %=, **=, <<=, >>=, >>>=, &=,
^=, |=, &&=, ||= и ??= – слева направо, yield и yield* – 
справа налево;
Запятая , – слева направо.
*/
